<template>
  <div class="app-container">
    <!-- :model属性用于表单验证使用 比如下面的el-form-item 的 prop属性用于对表单值进行验证操作 -->
    <el-form :model="queryParams" label-position="left" inline ref="queryForm" :label-width="labelWidth" v-show="showSearch" @submit.native.prevent>
{vueQueryFormHtml}
      <el-row class="mb8" style="text-align:center">
        <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
      </el-row>
    </el-form>
    
    <!-- 工具区域 -->
    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button type="primary" v-hasPermi="['{Permission}:add']" plain icon="el-icon-plus" size="mini" @click="handleAdd">新增</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button type="success" :disabled="single" v-hasPermi="['{Permission}:update']" plain icon="el-icon-edit" size="mini" @click="handleUpdate">修改</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button type="danger" :disabled="multiple" v-hasPermi="['{Permission}:delete']" plain icon="el-icon-delete" size="mini" @click="handleDelete">删除</el-button>
      </el-col>
      <right-toolbar :showSearch.sync="showSearch" @queryTable="getList"></right-toolbar>
    </el-row>

    <!-- 数据区域 -->
    <el-table :data="dataList" ref="table" border  @selection-change="handleSelectionChange">
      <el-table-column type="selection" width="50" />
{VueViewListContent}
      <el-table-column label="操作" align="center" width="200">
        <template slot-scope="scope">
          <el-button v-hasPermi="['{Permission}:update']" type="text" icon="el-icon-edit" @click="handleUpdate(scope.row)">编辑</el-button>
          <el-popconfirm title="确定删除吗？" @confirm="handleDelete(scope.row)" style="margin-left:10px">
            <el-button slot="reference"  v-hasPermi="['{Permission}:delete']" type="text" icon="el-icon-delete">删除</el-button>
          </el-popconfirm>
        </template>
      </el-table-column>
    </el-table>
    <pagination class="mt10" background :total="total" :page.sync="queryParams.pageNum" :limit.sync="queryParams.pageSize" @pagination="getList" />

    <!-- 添加或修改菜单对话框 -->
    <el-dialog :title="title" :lock-scroll="false" :visible.sync="open" >
      <el-form ref="form" :model="form" :rules="rules" :label-width="formLabelWidth">
{VueViewFormContent}
      </el-form>
      <div slot="footer" class="dialog-footer" v-if="btnSubmitVisible">
        <el-button @click="cancel">取 消</el-button>
        <el-button type="primary" @click="submitForm">确 定</el-button>
      </div>
    </el-dialog>

  </div>
</template>
<script>
import { 
    list{ModelTypeName},
    add{ModelTypeName},
    del{ModelTypeName},
    update{ModelTypeName},
    get{ModelTypeName} 
} from '@/api/{fileClassName}.js'

export default {
  name: '{ModelTypeName}',
  data() {
    return {
      labelWidth: "100px",
      formLabelWidth:"100px",
      // 选中{PrimaryKey}数组
      ids: [],
      // 非单个禁用
      single: true,
      // 非多个禁用
      multiple: true,
      // 遮罩层
      loading: true,
      // 显示搜索条件
      showSearch: true,
      // 查询参数
      queryParams: {},
      // 弹出层标题
      title: "",
      // 是否显示弹出层
      open: false,
      // 表单参数
      form: {},
      // 时间范围数组
      timeRange: [],
      {VueDataContent}
      // 数据列表
      dataList: [],
      // 总记录数
      total: 0,
      // 提交按钮是否显示
      btnSubmitVisible: true,
      // 表单校验
      rules: {
{VueViewEditFormRuleContent}
      },
    };
  },
  mounted() {
    // 列表数据查询
    this.getList();

{MountedMethod}
  },
  methods: {
    // 查询数据
    getList() {
      console.log(JSON.stringify(this.queryParams));
       list{ModelTypeName}(this.addDateRange(this.queryParams, this.timeRange)).then(res => {
         if (res.code == 200) {
           this.dataList = res.data.result;
           this.total = res.data.totalCount;
         }
       })
    },
    // 取消按钮
    cancel() {
      this.open = false;
      this.reset();
    },
    // 重置数据表单
    reset() {
      this.form = {
{VueViewFormResetHtml}
		//TODO 根据实际内容调整
      };
      this.resetForm("form");
    },
    /** 重置查询操作 */
    resetQuery() {
      this.timeRange = [];
      this.resetForm("queryForm");
      this.queryParams = {
        pageNum: 1,
        pageSize: 20,
        //TODO 重置字段
      };
      this.handleQuery();
    },
    // 多选框选中数据
    handleSelectionChange(selection) {
      this.ids = selection.map((item) => item.{PrimaryKey});
      this.single = selection.length!=1
      this.multiple = !selection.length;
    },
    /** 搜索按钮操作 */
    handleQuery() {
      this.getList();
    },
    /** 新增按钮操作 */
    handleAdd() {
      this.reset();
      this.open = true;
      this.title = "添加";
    },
    /** 删除按钮操作 */
    handleDelete(row) {
      const {PrimaryKey}s = row.{PrimaryKey} || this.ids;
      del{ModelTypeName}({PrimaryKey}s.toString()).then((res) => {
        this.msgSuccess("删除成功");
        this.handleQuery();
      });
    },
    /** 修改按钮操作 */
    handleUpdate(row) {
      this.reset();
      const {PrimaryKey} = row.{PrimaryKey} || this.ids;
      get{ModelTypeName}({PrimaryKey}).then((res) => {
        if(res.code == 200){
           this.form = res.data;
           this.open = true;
           this.title = "修改数据";
        }
      });
    },
    beforeFileUpload(file) { },
    {vueJsMethod}
    /** 提交按钮 */
    submitForm: function () {
      this.$refs["form"].validate((valid) => {
        if (valid) {
          console.log(JSON.stringify(this.form));
          
          if (this.form.{PrimaryKey} != undefined || this.title === '修改数据') {
            update{ModelTypeName}(this.form).then((res) => {
                this.msgSuccess("修改成功");
                this.open = false;
                this.getList();
            });
          } else {
            add{ModelTypeName}(this.form).then((res) => {
                this.msgSuccess("新增成功");
                this.open = false;
                this.getList();
            });
          }
        }
      });
    },
  },
};
</script>
<style scoped>
.table-td-thumb {
  width: 80px;
}
</style>
