
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------
using Infrastructure.Attribute;
using Microsoft.AspNetCore.Mvc;
using ZR.Admin.WebApi.Filters;
using ZR.Model.System;
using ZR.Service.System.IService;
using Infrastructure.Model;
using SqlSugar;
using Mapster;
using ZR.Model.System.Dto;
using Infrastructure.Enums;
using Infrastructure;
using ZR.Admin.WebApi.Extensions;

namespace ZR.Admin.WebApi.Controllers
{
    /// <summary>
    /// T4代码自动生成
    /// </summary>

    [Verify]
    [Route("system/SysFile")]
    public class SysFile1Controller: BaseController
	{
        /// <summary>
        /// 文件管理接口
        /// </summary>
        private readonly ISysFileService _SysFileService;

        public SysFile1Controller(ISysFileService SysFileService)
        {
            _SysFileService = SysFileService;
        }

        /// <summary>
        /// 查询文件管理列表
        /// </summary>
        /// <returns></returns>
        [HttpGet("list")]
        //[ActionPermissionFilter(Permission = "system:SysFile:list")]
        public IActionResult Query([FromQuery] SysFileQueryDto parm)
        {
            //开始拼装查询条件
            var predicate = Expressionable.Create<SysFile>();

            //TODO 搜索条件
            //predicate = predicate.And(m => m.Name.Contains(parm.Name));

            var response = _SysFileService.GetPages(predicate.ToExpression(), parm);

            return SUCCESS(response);
        }

        /// <summary>
        /// 查询文件管理详情
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        [HttpGet("{id}")]
        public IActionResult Get(string id)
        {
            var response = _SysFileService.GetId(id);

            return SUCCESS(response);
        }

        /// <summary>
        /// 添加文件管理
        /// </summary>
        /// <returns></returns>
        [HttpPost]
        //[ActionPermissionFilter(Permission = "system:SysFile:add")]
        [Log(Title = "文件管理添加", BusinessType = BusinessType.INSERT)]
        public IActionResult Create([FromBody] SysFile parm)
        {
            if (parm == null)
            {
                throw new CustomException("请求参数错误");
            }
            //从 Dto 映射到 实体
            var addModel = parm.Adapt<SysFile>().ToCreate();
            //addModel.CreateID = User.Identity.Name;

            return SUCCESS(_SysFileService.Add(addModel));
        }

        /// <summary>
        /// 更新文件管理
        /// </summary>
        /// <returns></returns>
        [HttpPut("edit")]
        //[ActionPermissionFilter(Permission = "system:SysFile:update")]
        [Log(Title = "文件管理修改", BusinessType = BusinessType.UPDATE)]
        public IActionResult Update([FromBody] SysFile parm)
        {
            //从 Dto 映射到 实体
            var addModel = parm.Adapt<SysFile>().ToCreate();
            //addModel.CreateID = User.Identity.Name;
            //TODO 字段映射
            var response = _SysFileService.Update(addModel);

            return SUCCESS(response);
        }

        /// <summary>
        /// 删除文件管理
        /// </summary>
        /// <returns></returns>
        [HttpDelete("{id}")]
        //[ActionPermissionFilter(Permission = "system:SysFile:delete")]
        [Log(Title = "文件管理删除", BusinessType = BusinessType.DELETE)]
        public IActionResult Delete(int id = 0)
        {
            if (id <= 0) { return OutputJson(ApiResult.Error($"删除失败Id 不能为空")); }

            // 删除文件管理
            var response = _SysFileService.Delete(id);

            return SUCCESS(response);
        }
	}
}